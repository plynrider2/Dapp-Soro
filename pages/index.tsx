import axios from 'axios';
import React from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
// TODO: Use the SDK
// import * as StellarSdk from 'stellar-sdk';
import * as StellarBase from 'stellar-base';
import init, {invoke_contract} from "../../rs-stellar-wasm-browser/pkg/stellar_wasm_browser.js";
import { ConnectButton } from "../wallet";

const PIXEL_NFT_WASM = "AGFzbQEAAAABDgNgAAF+YAF/AGABfwF+AwUEAAABAgUDAQARBhkDfwFBgIDAAAt/AEG8gcAAC38AQcCBwAALBzUFBm1lbW9yeQIABXBpeGVsAAAFb3duZXIAAQpfX2RhdGFfZW5kAwELX19oZWFwX2Jhc2UDAgqYAwQJAELxv+u+lQEL+QICA38CfgJ+IwBBEGsiACQAA0ACQAJAIAACfyACQQpGBEAgAEEIaiAEQgSGQgmENwMAQQAMAQsgAkEKRwRAQgEhAyACQYCAQGstAAAiAUHfAEYNAiABrSEDAkACQCABQTBrQf8BcUEKTwRAIAFBwQBrQf8BcUEaSQ0BIAFB4QBrQf8BcUEaSQ0CIABBATYCBCAAQQhqIAE2AgBBAQwECyADQi59IQMMBAsgA0I1fSEDDAMLIANCO30hAwwCCyAAQQA2AgQgAEEIakEKNgIAQQELNgIADAELIAJBAWohAiADIARCBoaEIQQMAQsLIAAoAgBFBEAgACkDCCAAQRBqJAAMAQsjAEEgayIAJAAgAEEUakEANgIAIABBrIHAADYCECAAQgE3AgQgAEEONgIcIABBjIHAADYCGCAAIABBGGo2AgAjAEEgayIBJAAgAUEBOgAYIAFBnIHAADYCFCABIAA2AhAgAUGsgcAANgIMIAFBrIHAADYCCAALCwMAAQsNAELX1o7QiJnYj7V/CwvDAQEAQYCAwAALuQFHQktMTVFWTkNSL1VzZXJzL3BhdWxiZWxsYW15Ly5jYXJnby9naXQvY2hlY2tvdXRzL3JzLXN0ZWxsYXItY29udHJhY3QtZW52LWE3NDU5OGJlZmVmNTk3OGQvNmIzNmZkNS9zdGVsbGFyLWNvbnRyYWN0LWVudi1jb21tb24vc3JjL3N5bWJvbC5yc2V4cGxpY2l0IHBhbmljAAAKABAAggAAAFoAAAAXAAAAAQAAAAAAAAABAAAAAg==";

const Home: NextPage = () => {
  const [value, setValue] = React.useState<any>(null);
  
  React.useEffect(() => {
    (async () => {
      let url = '/api/horizon';
      // const server = new StellarSdk.Server(url, { allowHttp: true });
      const contractOwner = 'GDUT3U3X5RID2KKXBF7GGANYH4UT3RUT4Y5KLLGHTAIOJT67UZUNQ4Y2';
      const contractId = "0000000000000000000000000000000000000000000000000000000000000000";


      // const args: StellarBase.xdr.ScVal[] = [
      //   StellarBase.xdr.ScVal.scvPosI64(
      //     StellarBase.xdr.Int64.fromString("3")
      //   )
      // ];

      // const argsXdr = StellarBase.xdr.ScVec.toXDR(args).toString('base64');
      const argsXdr = "";

      const response = await axios.post(url+'/rpc', {
        id: 1,
        method: "call",
        params: {
          contract: `${contractId}`,
          func: "pixel",
          xdr: argsXdr,
        }
      });
      console.debug(response.data);
      const resultXdr = response.data?.result;

      // await init();
      // const resultXdr = Buffer.from(invoke_contract(contractId, PIXEL_NFT_WASM, "pixel", argsXdr));
      const result = StellarBase.xdr.ScVal.fromXDR(resultXdr, 'base64').u32().toString(16);
      setValue({ result });
    })();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />
        <div style={{display: "flex", flexDirection: "column", alignItems: "center", margin: "3rem"}}>
          {!value ? (
            <>Loading...</>
          ) : value.result ? (
            <>
              <span style={{
                backgroundColor: `#${value.result}`,
                display: "inline-block",
                width: "4rem",
                height: "4rem",
                borderRadius: "10%",
                margin: "1rem",
              }} />
              <span>#{value.result.slice(0,6)}</span>
            </>
          ) : (
            <>Error: {value.error}</>
          )}
        </div>
      </main>
    </div>
  )
}

export default Home
